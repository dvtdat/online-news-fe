/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './features/~__root'
import { Route as IndexImport } from './features/~index'
import { Route as LoginIndexImport } from './features/~login/~index'
import { Route as HomeIndexImport } from './features/~home/~index'
import { Route as AdminIndexImport } from './features/~admin/~index'
import { Route as AdminIdIndexImport } from './features/~admin/~$id/~index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIdIndexRoute = AdminIdIndexImport.update({
  id: '/admin/$id/',
  path: '/admin/$id/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/$id/': {
      id: '/admin/$id/'
      path: '/admin/$id'
      fullPath: '/admin/$id'
      preLoaderRoute: typeof AdminIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/home': typeof HomeIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/$id': typeof AdminIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/home': typeof HomeIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/$id': typeof AdminIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin/': typeof AdminIndexRoute
  '/home/': typeof HomeIndexRoute
  '/login/': typeof LoginIndexRoute
  '/admin/$id/': typeof AdminIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/home' | '/login' | '/admin/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/home' | '/login' | '/admin/$id'
  id: '__root__' | '/' | '/admin/' | '/home/' | '/login/' | '/admin/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  AdminIdIndexRoute: typeof AdminIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  AdminIdIndexRoute: AdminIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/admin/",
        "/home/",
        "/login/",
        "/admin/$id/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/admin/": {
      "filePath": "~admin/~index.tsx"
    },
    "/home/": {
      "filePath": "~home/~index.tsx"
    },
    "/login/": {
      "filePath": "~login/~index.tsx"
    },
    "/admin/$id/": {
      "filePath": "~admin/~$id/~index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
