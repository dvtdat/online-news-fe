/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './features/~__root'
import { Route as IndexImport } from './features/~index'
import { Route as LoginIndexImport } from './features/~login/~index'
import { Route as HomeIndexImport } from './features/~home/~index'
import { Route as AdminIndexImport } from './features/~admin/~index'
import { Route as AdminPrinterIndexImport } from './features/~admin/~printer/~index'
import { Route as AdminLogIndexImport } from './features/~admin/~log/~index'
import { Route as AdminAllocateIndexImport } from './features/~admin/~allocate/~index'
import { Route as AdminPrinterIdIndexImport } from './features/~admin/~printer/~$id/~index'
import { Route as AdminAllocateIdIndexImport } from './features/~admin/~allocate/~$id/~index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminPrinterIndexRoute = AdminPrinterIndexImport.update({
  id: '/admin/printer/',
  path: '/admin/printer/',
  getParentRoute: () => rootRoute,
} as any)

const AdminLogIndexRoute = AdminLogIndexImport.update({
  id: '/admin/log/',
  path: '/admin/log/',
  getParentRoute: () => rootRoute,
} as any)

const AdminAllocateIndexRoute = AdminAllocateIndexImport.update({
  id: '/admin/allocate/',
  path: '/admin/allocate/',
  getParentRoute: () => rootRoute,
} as any)

const AdminPrinterIdIndexRoute = AdminPrinterIdIndexImport.update({
  id: '/admin/printer/$id/',
  path: '/admin/printer/$id/',
  getParentRoute: () => rootRoute,
} as any)

const AdminAllocateIdIndexRoute = AdminAllocateIdIndexImport.update({
  id: '/admin/allocate/$id/',
  path: '/admin/allocate/$id/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/allocate/': {
      id: '/admin/allocate/'
      path: '/admin/allocate'
      fullPath: '/admin/allocate'
      preLoaderRoute: typeof AdminAllocateIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/log/': {
      id: '/admin/log/'
      path: '/admin/log'
      fullPath: '/admin/log'
      preLoaderRoute: typeof AdminLogIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/printer/': {
      id: '/admin/printer/'
      path: '/admin/printer'
      fullPath: '/admin/printer'
      preLoaderRoute: typeof AdminPrinterIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/allocate/$id/': {
      id: '/admin/allocate/$id/'
      path: '/admin/allocate/$id'
      fullPath: '/admin/allocate/$id'
      preLoaderRoute: typeof AdminAllocateIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/printer/$id/': {
      id: '/admin/printer/$id/'
      path: '/admin/printer/$id'
      fullPath: '/admin/printer/$id'
      preLoaderRoute: typeof AdminPrinterIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/home': typeof HomeIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/allocate': typeof AdminAllocateIndexRoute
  '/admin/log': typeof AdminLogIndexRoute
  '/admin/printer': typeof AdminPrinterIndexRoute
  '/admin/allocate/$id': typeof AdminAllocateIdIndexRoute
  '/admin/printer/$id': typeof AdminPrinterIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/home': typeof HomeIndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/allocate': typeof AdminAllocateIndexRoute
  '/admin/log': typeof AdminLogIndexRoute
  '/admin/printer': typeof AdminPrinterIndexRoute
  '/admin/allocate/$id': typeof AdminAllocateIdIndexRoute
  '/admin/printer/$id': typeof AdminPrinterIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin/': typeof AdminIndexRoute
  '/home/': typeof HomeIndexRoute
  '/login/': typeof LoginIndexRoute
  '/admin/allocate/': typeof AdminAllocateIndexRoute
  '/admin/log/': typeof AdminLogIndexRoute
  '/admin/printer/': typeof AdminPrinterIndexRoute
  '/admin/allocate/$id/': typeof AdminAllocateIdIndexRoute
  '/admin/printer/$id/': typeof AdminPrinterIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/home'
    | '/login'
    | '/admin/allocate'
    | '/admin/log'
    | '/admin/printer'
    | '/admin/allocate/$id'
    | '/admin/printer/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/home'
    | '/login'
    | '/admin/allocate'
    | '/admin/log'
    | '/admin/printer'
    | '/admin/allocate/$id'
    | '/admin/printer/$id'
  id:
    | '__root__'
    | '/'
    | '/admin/'
    | '/home/'
    | '/login/'
    | '/admin/allocate/'
    | '/admin/log/'
    | '/admin/printer/'
    | '/admin/allocate/$id/'
    | '/admin/printer/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  AdminAllocateIndexRoute: typeof AdminAllocateIndexRoute
  AdminLogIndexRoute: typeof AdminLogIndexRoute
  AdminPrinterIndexRoute: typeof AdminPrinterIndexRoute
  AdminAllocateIdIndexRoute: typeof AdminAllocateIdIndexRoute
  AdminPrinterIdIndexRoute: typeof AdminPrinterIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  AdminAllocateIndexRoute: AdminAllocateIndexRoute,
  AdminLogIndexRoute: AdminLogIndexRoute,
  AdminPrinterIndexRoute: AdminPrinterIndexRoute,
  AdminAllocateIdIndexRoute: AdminAllocateIdIndexRoute,
  AdminPrinterIdIndexRoute: AdminPrinterIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/admin/",
        "/home/",
        "/login/",
        "/admin/allocate/",
        "/admin/log/",
        "/admin/printer/",
        "/admin/allocate/$id/",
        "/admin/printer/$id/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/admin/": {
      "filePath": "~admin/~index.tsx"
    },
    "/home/": {
      "filePath": "~home/~index.tsx"
    },
    "/login/": {
      "filePath": "~login/~index.tsx"
    },
    "/admin/allocate/": {
      "filePath": "~admin/~allocate/~index.tsx"
    },
    "/admin/log/": {
      "filePath": "~admin/~log/~index.tsx"
    },
    "/admin/printer/": {
      "filePath": "~admin/~printer/~index.tsx"
    },
    "/admin/allocate/$id/": {
      "filePath": "~admin/~allocate/~$id/~index.tsx"
    },
    "/admin/printer/$id/": {
      "filePath": "~admin/~printer/~$id/~index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
